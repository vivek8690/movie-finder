{"version":3,"sources":["app/utils/auth.context.js","app/movie-portal/components/Movie-card/index.jsx","app/movie-portal/components/Movie-listing/index.jsx","app/movie-portal/components/Search/searchBar.jsx","app/movie-portal/components/Search/index.jsx","app/_shared/constants/api.endpoints.js","app/utils/api.js","app/utils/movie.api.js","app/utils/category.api.js","app/movie-portal/components/Movie-details/index.jsx","app/movie-portal/index.jsx","app/_shared/components/Login/index.jsx","app/_shared/components/Header/index.jsx","app/_shared/components/ErrorBoundries/index.jsx","app/app.jsx","serviceWorker.js","index.js"],"names":["AuthContext","createContext","useAuthContext","useContext","MovieCard","memo","movie","editMovie","deleteMovie","role","_id","name","director","popularity","imdb_score","genre","Col","xs","md","sm","className","key","Card","Body","Title","style","marginRight","Text","aria-hidden","map","cat","index","Badge","variant","onClick","renderButtons","prototype","PropTypes","shape","bool","isRequired","string","number","array","MovieListing","movies","moviesList","Container","Row","length","defaultProps","SearchBar","props","InputGroup","Form","Control","aria-describedby","placeholder","type","options","value","label","SearchArea","onHandleChange","newMovie","categories","useState","search","sortBy","query","setQuery","useEffect","onChange","evt","target","obj","isMulti","Button","API_ENDPOINTS","baseURL","MOVIES","GET_MOVIES","DELETE_MOVIE","CATEGORIES","GET_ALL","api","axios","create","interceptors","request","use","config","localStorage","getItem","headers","error","Promise","reject","response","indexOf","status","removeItem","param","queryParams","trackPromise","get","params","body","post","put","delete","getMovies","a","join","API","deleteMovieDetails","movieId","addMovieDetails","updateMovieDetails","getCategories","MovieComponent","show","onHide","action","movieObj","actioncallback","setCategories","setMovie","fetchCategories","data","console","log","formatCategories","Modal","size","centered","Header","closeButton","onSubmit","event","preventDefault","Group","as","Label","column","required","min","max","step","Footer","MoviePortal","setMovies","openMovie","displayMovie","currentMovie","setAction","closeModal","fetchMovies","resp","toast","notify","message","position","setItem","debounceSearch","useRef","_","debounce","Search","current","LoginComponent","setRole","controlId","text","loginShow","setLoginShow","Navbar","expand","bg","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Login","ErrorBoundary","state","hasError","info","this","children","React","Component","App","currentRole","Provider","top","left","promiseTracker","usePromiseTracker","color","background","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6a74d09d.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport function useAuthContext() {\n    return useContext(AuthContext);\n}","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Badge, Card, Col } from \"react-bootstrap\";\nimport { useAuthContext } from '../../../utils/auth.context';\n\nconst MovieCard = memo(({ movie, editMovie, deleteMovie }) => {\n\n    const { role } = useAuthContext();\n    const {\n        _id,\n        name,\n        director,\n        popularity,\n        imdb_score,\n        genre\n    } = movie;\n\n    const renderBadges = () => {\n        return genre.map((cat, index) => <Badge key={index} variant=\"secondary float-right\" className=\"mr-2\">{cat}</Badge>)\n    }\n\n    const renderButtons = (movie) => {\n        return (\n            <>\n                <i className=\"fa fa-edit mr-2\" onClick={() => editMovie(movie)}></i>\n                <i className=\"fa fa-trash mr-2\" onClick={() => deleteMovie(movie)}></i>\n            </>\n        )\n    }\n    return (\n        <Col\n            xs={12}\n            md={12}\n            sm={12}\n            className=\"movieCard\"\n            key={_id}\n        >\n            <Card\n                className=\"mb-2 p-2\"\n            >\n                <Card.Body>\n                    <Card.Title>\n                        <span className=\"fa fa-film\" style={{ marginRight: \"10px\" }}></span>\n                        {name}\n                        <span className=\"float-right\">{imdb_score} <span className=\"fa fa-star checked\"></span></span>\n                    </Card.Title>\n                    <Card.Text>\n                        <i className=\"fa fa-video-camera mr-2\" aria-hidden=\"true\"></i><b>Director: </b>{director}\n                        <i className=\"fa fa-users d-block mr-2 mt-2\" aria-hidden=\"true\"> {' '}{popularity}%</i>\n                        {renderBadges()}\n                    </Card.Text>\n                    {role === 'admin' ? renderButtons(movie) : ''}\n                </Card.Body>\n            </Card>\n        </Col >\n    )\n})\n\nMovieCard.prototype = {\n    movie: PropTypes.shape({\n        _id: PropTypes.bool.isRequired,\n        name: PropTypes.string.isRequired,\n        director: PropTypes.string.isRequired,\n        popularity: PropTypes.string.isRequired,\n        imdb_score: PropTypes.number.isRequired,\n        genre: PropTypes.array.isRequired,\n    })\n};\nexport default MovieCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MovieCard from \"../Movie-card\";\nimport { Row, Container, Col } from \"react-bootstrap\";\n\nfunction MovieListing({ movies, editMovie, deleteMovie }) {\n  let moviesList = movies.map(movie =>\n    <MovieCard key={movie._id} movie={movie}\n      editMovie={editMovie} deleteMovie={deleteMovie} />\n  );\n\n  return (\n    <Container>\n      <Row>{moviesList.length > 0 ? moviesList : <Col>No Data found</Col>}</Row>\n    </Container>\n  );\n}\n\nMovieListing.defaultProps = {};\nMovieListing.propTypes = {\n  movies: PropTypes.array.isRequired\n};\nexport default MovieListing;\n","import React from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nfunction SearchBar(props) {\n  return (\n    <InputGroup className=\"search-box\">\n      <Form.Control\n        aria-describedby=\"inputGroup-sizing-sm\"\n        placeholder=\"Search\"\n        type=\"text\"\n        {...props}\n      />\n    </InputGroup>\n  );\n}\nSearchBar.defaultProps = {\n  // text: \"\"\n};\nSearchBar.propTypes = {\n  placeholder: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default SearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport Select from 'react-select';\nimport PropTypes from \"prop-types\";\n\nimport SearchBar from \"./searchBar\";\nimport { useAuthContext } from '../../../utils/auth.context';\n\n\nconst options = [\n  { value: 'imdb_score', label: 'imdb_score' },\n  { value: 'popularity', label: 'popularity' },\n  { value: 'director', label: 'director' },\n  { value: 'name', label: 'name' },\n];\n\nfunction SearchArea({ onHandleChange, newMovie, categories }) {\n\n  const { role } = useAuthContext();\n  const [query, setQuery] = useState({\n    search: '',\n    sortBy: options[0],\n    genre: []\n  })\n\n  useEffect(() => {\n    onHandleChange(query)\n  }, [query])\n\n  return (\n    <Container className=\"search-area\">\n      <Row>\n        <Col>\n          <SearchBar\n            placeholder=\"Search movie by name / director\"\n            name=\"search\"\n            type=\"text\"\n            onChange={(evt) => setQuery({ ...query, search: evt.target.value })}\n          />\n        </Col>\n        <Col>\n          <Select\n            value={[query.sortBy]}\n            onChange={(obj) => setQuery({ ...query, sortBy: obj })}\n            options={options}\n            placeholder='sort by'\n          />\n        </Col>\n        <Col>\n          <Select\n            value={query.genre}\n            onChange={(obj) => setQuery({ ...query, genre: obj })}\n            isMulti\n            options={categories}\n            placeholder='select categories'\n          />\n        </Col>\n        {role === 'admin' ? <Col>\n          <Button className=\"btn btn-secondary\"\n            onClick={() => newMovie(true)}>Add Movie</Button>\n        </Col> : ''}\n      </Row>\n    </Container>\n  );\n}\n\nSearchArea.propTypes = {\n  onHandleChange: PropTypes.func.isRequired\n};\nexport default SearchArea;\n","const API_ENDPOINTS = {\n    baseURL: `https://infinite-cove-67589.herokuapp.com`,\n    MOVIES: {\n        GET_MOVIES: '/api/movies',\n        DELETE_MOVIE: '/api/movies'\n    },\n    CATEGORIES: {\n        GET_ALL: '/api/genres'\n    }\n}\nexport default API_ENDPOINTS;\n","import axios from 'axios';\nimport { trackPromise } from 'react-promise-tracker';\nimport API_ENDPOINTS from '../_shared/constants/api.endpoints';\n\nconst api = axios.create({\n  baseURL: API_ENDPOINTS.baseURL,\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const options = { ...config };\n    if (localStorage.getItem('role')) {\n      options.headers.role = localStorage.getItem('role');\n    }\n    options.headers['Content-Type'] = 'application/json';\n    return options;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response && [401, 403].indexOf(error.response.status) !== -1) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst get = (param, queryParams) => trackPromise(api.get(param, { params: queryParams }));\n\nconst post = (param, body) => trackPromise(api.post(param, body));\n\nconst put = (param, body) => trackPromise(api.put(param, body));\n\nconst patch = (param, body) => trackPromise(api.patch(param, body));\n\nconst del = (param) => trackPromise(api.delete(param));\n\nexport default {\n  get,\n  post,\n  put,\n  patch,\n  deleteIt: del,\n};\n","import API from './api';\nimport API_ENDPOINTS from '../_shared/constants/api.endpoints';\n\nconst getMovies = async (query) => {\n    let params = {\n        search: query.search,\n        sortBy: query.sortBy.value,\n        genre: query.genre ? query.genre.map(cat => cat.value).join(',') : null,\n    }\n\n    return API.get(`${API_ENDPOINTS.MOVIES.GET_MOVIES}`, params);\n};\n\nconst deleteMovieDetails = async (movieId) => {\n    return API.deleteIt(`${API_ENDPOINTS.MOVIES.DELETE_MOVIE}/${movieId}`);\n}\n\nconst addMovieDetails = async (movie) => {\n    return API.post(`${API_ENDPOINTS.MOVIES.DELETE_MOVIE}`, movie);\n}\n\nconst updateMovieDetails = async (movie) => {\n    return API.put(`${API_ENDPOINTS.MOVIES.DELETE_MOVIE}/${movie._id}`, movie);\n}\n\nexport { getMovies, deleteMovieDetails, updateMovieDetails, addMovieDetails};\n","import API from './api';\nimport API_ENDPOINTS from '../_shared/constants/api.endpoints';\n\nconst getCategories = async () => {\n    return API.get(`${API_ENDPOINTS.CATEGORIES.GET_ALL}`);\n};\n\nexport { getCategories };\n","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\nimport CreatableSelect from 'react-select/creatable';\nimport { getCategories } from \"../../../utils/category.api\";\n\nconst MovieComponent = ({ show, onHide, action, movieObj, actioncallback }) => {\n\n    const [categories, setCategories] = useState([]);\n    const [movie, setMovie] = useState({\n        name: '',\n        director: '',\n        imdb_score: 0,\n        popularity: 0,\n        genre: []\n    })\n\n    const fetchCategories = async () => {\n        try {\n            const categories = await getCategories();\n            const options = categories.data.data.map(cat => {\n                const obj = {}\n                obj.value = cat.type;\n                obj.label = cat.type;\n                return obj;\n            })\n            setCategories(options);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const formatCategories = (categories) => {\n        if (categories && categories.length > 0) {\n            return categories.map((cat,index) => {\n                const obj = {}\n                obj.value = cat;\n                obj.label = cat;\n                obj.key = index;\n                return obj;\n            })\n        }\n        return [];\n    }\n\n    const handleChange = (obj) => {\n        setMovie({ ...movie, genre: obj });\n    }\n\n    useEffect(() => {\n        fetchCategories();\n        if (movieObj) {\n            movieObj.genre = formatCategories(movieObj.genre);\n            console.log(movieObj.genre);\n            setMovie(movieObj);\n        }\n    }, [movieObj]);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        actioncallback(action, movie);\n    }\n\n    return (\n        <Modal size=\"lg\" show={show} onHide={onHide} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>{action} Movie </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group as={Row} >\n                        <Form.Label column sm=\"2\">\n                            Movie Name\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control type=\"text\"\n                                placeholder=\"Enter Movie name\"\n                                value={movie.name || ''}\n                                onChange={(evt) => setMovie({ ...movie, name: evt.target.value })}\n                                required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} >\n                        <Form.Label column sm=\"2\">\n                            Director\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control type=\"text\"\n                                placeholder=\"Enter Director name\"\n                                value={movie.director || ''}\n                                onChange={(evt) => setMovie({ ...movie, director: evt.target.value })}\n                                required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} >\n                        <Form.Label column sm=\"2\">\n                            Ratings\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control type=\"number\" min=\"0\" max=\"10\"\n                                step=\"0.01\"\n                                placeholder=\"Enter Ratings\"\n                                value={movie.imdb_score || ''}\n                                onChange={(evt) => setMovie({ ...movie, imdb_score: evt.target.value })}\n                                required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} >\n                        <Form.Label column sm=\"2\">\n                            Populariy\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"\n                                placeholder=\"Enter Popularity\"\n                                value={movie.popularity || ''}\n                                onChange={(evt) => setMovie({ ...movie, popularity: evt.target.value })}\n                                required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} >\n                        <Form.Label column sm=\"2\">\n                            Categories\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <CreatableSelect\n                                value={movie.genre || ''}\n                                isMulti\n                                options={categories}\n                                placeholder='select categories'\n                                onChange={handleChange}\n                                required\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={onHide}>\n                            Close\n                        </Button>\n                        <Button type=\"submit\" variant=\"primary\">\n                            Save Changes\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal.Body>\n        </Modal>)\n}\n\nexport default MovieComponent;","import React, { useState, useRef, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport _ from \"lodash\";\nimport toast from 'toasted-notes';\nimport { MovieListing, SearchComponent } from \"./components\";\nimport { getMovies, deleteMovieDetails, updateMovieDetails, addMovieDetails } from \"../utils/movie.api\";\nimport MovieComponent from './components/Movie-details';\nimport { getCategories } from \"../utils/category.api\";\n\nfunction MoviePortal() {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState({});\n  const [openMovie, displayMovie] = useState(false);\n  const [movie, currentMovie] = useState({});\n  const [action, setAction] = useState('Add');\n  const [categories, setCategories] = useState([]);\n\n\n  const openMovieModal = () => {\n    return <MovieComponent show={openMovie}\n      onHide={closeModal} action={action}\n      movieObj={movie} actioncallback={actioncallback} />\n  }\n\n  const closeModal = () =>{\n    currentMovie({});\n    displayMovie(false);\n  }\n\n  const fetchMovies = async (query) => {\n    try {\n      const movies = await getMovies(query);\n      setMovies(movies.data.data);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const fetchCategories = async () => {\n    try {\n      const categories = await getCategories();\n      const options = categories.data.data.map((cat,index) => {\n        const obj = {};\n        obj.value = cat.type;\n        obj.label = cat.type;\n        obj.key = index;\n        return obj;\n      })\n      setCategories(options);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    fetchCategories()\n  }, [])\n\n  const editMovie = (movie) => {\n    setAction('Edit');\n    displayMovie(true);\n    currentMovie({ ...movie });\n  }\n\n  const addMovie = () => {\n    setAction('Add');\n    displayMovie(true);\n    currentMovie({ ...movie });\n  }\n\n  const actioncallback = async (action, movie) => {\n    let resp;\n    try {\n      movie.genre = movie.genre ? movie.genre.map(cat => cat.value) : [];\n      if (action === 'Edit') {\n        resp = await updateMovieDetails(movie);\n      } else {\n        resp = await addMovieDetails(movie);\n      }\n      toast.notify(`\"${resp.data.data.name}\" ${resp.data.message}`, {\n        position: 'top',\n      });\n      displayMovie(false);\n      currentMovie({});\n    } catch (err) {\n      console.log(err);\n    }\n    fetchMovies(query);\n    fetchCategories();\n  }\n\n  const deleteMovie = async (movie) => {\n    localStorage.setItem('role', 'admin')\n    try {\n      const resp = await deleteMovieDetails(movie._id);\n      toast.notify(`\"${resp.data.data.name}\" ${resp.data.message}`, {\n        position: 'top',\n      });\n      fetchMovies(query);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n\n\n  const debounceSearch = useRef(\n    _.debounce(query => {\n      fetchMovies(query);\n      setQuery(query);\n    }, 1000)\n  );\n\n  const onHandleChange = (query) => {\n    debounceSearch.current(query);\n  }\n\n  return (\n    <Container>\n      <SearchComponent onHandleChange={onHandleChange}\n        newMovie={addMovie} categories={categories} />\n      <hr />\n      {movies ? <MovieListing movies={movies} deleteMovie={deleteMovie}\n        editMovie={editMovie} /> : ''}\n      {openMovieModal()}\n    </Container>\n  )\n}\n\nexport default MoviePortal;","import React, { useState } from \"react\";\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\n\nconst LoginComponent = (props) => {\n    let [role, setRole] = useState('');\n\n    return (\n        <Modal  {...props}>\n            <Modal.Header closeButton>\n                <Modal.Title>Enter Your Role</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                        <Form.Label column sm=\"2\">\n                            Role\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control type=\"text\"\n                                placeholder=\"Enter your role\"\n                                onChange={(evt) => setRole(evt.target.value)} />\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.onHide}>\n                    Close\n          </Button>\n                <Button variant=\"primary\" onClick={() => props.onSubmit(role)}>\n                    Save Changes\n          </Button>\n            </Modal.Footer>\n        </Modal>)\n}\n\nexport default LoginComponent;","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport toast from 'toasted-notes';\nimport { Navbar, Nav } from 'react-bootstrap'\nimport LoginComponent from '../Login';\nimport { useAuthContext } from '../../../utils/auth.context';\n\nfunction Header({ text }) {\n\n  const { role, setRole } = useAuthContext();\n  const [loginShow, setLoginShow] = useState(false);\n\n  const onSubmit = (role) => {\n    setRole(role);\n    setLoginShow(false);\n    if (role === 'admin') {\n      toast.notify(`You are admin now`, {\n        position: 'top',\n      });\n    }\n  }\n\n  const openLoginModal = () => {\n    return <LoginComponent show={loginShow}\n      onHide={() => setLoginShow(false)} onSubmit={onSubmit} />\n  }\n\n  return (\n    <Navbar expand=\"lg\" variant=\"dark\" bg=\"dark\">\n      <Navbar.Brand href=\"#home\">{text}</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n        <Nav>\n          {role !== 'admin' ? <Nav.Link onClick={() => setLoginShow(true)}>Login</Nav.Link> :\n            <Nav.Link onClick={() => setRole()}>Logout</Nav.Link>}\n        </Nav>\n      </Navbar.Collapse>\n      {openLoginModal()}\n    </Navbar>\n  );\n}\nHeader.defaultProps = {\n  text: \"Movie Hub\"\n};\nHeader.propTypes = {\n  text: PropTypes.string\n};\nexport default Header;\n","import React from \"react\";\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n","import React, { useState } from \"react\";\nimport MainComponent from \"./movie-portal\";\nimport { Header, ErrorBoundries } from \"./_shared/components\";\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport Loader from 'react-promise-loader';\nimport 'toasted-notes/src/styles.css';\nimport AuthContext from './utils/auth.context';\n\n\nfunction App() {\n  const currentRole = localStorage.getItem('role');\n\n  const [role, setRole] = useState(currentRole);\n\n  const setAuthUserRole = (role) => {\n    if (role) {\n      localStorage.setItem('role', role);\n    } else {\n      localStorage.removeItem('role');\n    }\n    setRole(role);\n  };\n\n  return (\n    <AuthContext.Provider value={{ role, setRole: setAuthUserRole }}>\n      <div className=\"App\">\n        <div className=\"h-100 w-100\">\n          <Loader\n            // className=\"d-flex align-items-center justify-content-center\"\n            style={{ position: 'relative', top: '50%', left: '50%'}}\n            promiseTracker={usePromiseTracker}\n            color=\"#282c34\"\n            background=\"rgba(255,255,255,0.200)\"\n          />\n        </div>\n        <ErrorBoundries>\n          <Header className=\"navbar\" />\n          <br></br>\n          <MainComponent />\n        </ErrorBoundries>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from \"./app/app\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}